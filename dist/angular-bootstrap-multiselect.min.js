!function(){"use strict";var e=angular.module("btorfs.multiselect",["btorfs.multiselect.templates"]).factory("directiveFocus",function(e,t){return function(l){t(function(){e.$broadcast("focusOn",l)})}});e.getRecursiveProperty=function(e,t){return t.split(".").reduce(function(e,t){return e?e[t]:null},e)},e.directive("multiselect",["$filter","$document","$log","directiveFocus",function(t,l,n,s){return{restrict:"AE",scope:{options:"=",displayProp:"@",idProp:"@",searchLimit:"=?",selectionLimit:"=?",showSelectAll:"=?",showUnselectAll:"=?",showSearch:"=?",searchFilter:"=?",disabled:"=?ngDisabled",labels:"=?",classesBtn:"=?",showTooltip:"=?",placeholder:"@?",fetchSearchFilterData:"=?"},require:"ngModel",templateUrl:"multiselect.html",controller:["$scope",function(e){angular.isUndefined(e.classesBtn)&&(e.classesBtn=["btn-block","btn-default"])}],link:function(t,i,o,c){t.selectionLimit=t.selectionLimit||0,t.searchLimit=t.searchLimit||25,t.searchFilter="",t.isFocusOn=1==t.showSearch||1==t.showSearch,t.resolvedOptions=[],"function"!=typeof t.options&&(void 0===t.options?t.resolvedOptions=[]:t.resolvedOptions=t.options),void 0!==o.disabled&&(t.disabled=!0);var r=function(e){i[0].contains(e.target)||t.$apply(function(){t.open=!1})};l.on("click",r);var a=function(){if(c.$viewValue){if(!t.selectedOptions&&c.$viewValue.length>0){t.selectedOptions=[];for(var e=c.$viewValue.slice(),l=0;l<e.length;l++)for(var n=e[l].id,s=0;s<t.resolvedOptions.length;s++){if(n==t.resolvedOptions[s].id){t.selectedOptions.push(t.resolvedOptions[s]);break}}}else t.selectedOptions||(t.selectedOptions=[]);var i=t.resolvedOptions.filter(function(e){for(var l=t.getId(e),n=0;n<c.$viewValue.length;n++){if(l===t.getId(c.$viewValue[n]))return!0}return!1});t.unselectedOptions=t.resolvedOptions.filter(function(e){return i.indexOf(e)<0})}else t.selectedOptions&&(t.selectedOptions=[]),t.unselectedOptions=t.resolvedOptions.slice()};t.toggleDropdown=function(){t.open=!t.open,t.resolvedOptions=t.options,t.searchFilter&&(t.searchFilter=""),a(),t.isFocusOn&&s("searchFilter")},c.$render=function(){a()},c.$viewChangeListeners.push(function(){a()}),c.$isEmpty=function(e){return!e||0===e.length};var p=t.$watch("selectedOptions",function(){c.$setViewValue(angular.copy(t.selectedOptions))},!0);function d(e){var l=angular.isDefined(e)?e.length:0;return 0===l?t.labels&&t.labels.select?t.labels.select:t.placeholder||"Select":l+" "+(t.labels&&t.labels.itemsSelected?t.labels.itemsSelected:"selected")}t.$on("$destroy",function(){l.off("click",r),p&&p()}),t.getButtonText=function(){return t.selectedOptions&&1===t.selectedOptions.length?t.getDisplay(t.selectedOptions[0]):t.selectedOptions&&0==t.selectedOptions.length&&c.$viewValue&&1==c.$viewValue.length?t.getDisplay(c.$viewValue[0]):t.selectedOptions&&t.selectedOptions.length>1?d(t.selectedOptions):c.$viewValue&&c.$viewValue.length>1?d(c.$viewValue):t.labels&&t.labels.select?t.labels.select:t.placeholder||"Select"},t.selectAll=function(){t.selectedOptions=t.resolvedOptions.slice(),t.unselectedOptions=[]},t.unselectAll=function(){t.selectedOptions=[],t.unselectedOptions=t.resolvedOptions.slice()},t.toggleItem=function(e){void 0===t.selectedOptions&&(t.selectedOptions=[]);var l=t.selectedOptions.indexOf(e),n=-1!==l;if(n)t.unselectedOptions.push(t.selectedOptions[l]),t.selectedOptions.splice(l,1);else if(!n&&(0===t.selectionLimit||t.selectedOptions.length<t.selectionLimit||1==t.selectionLimit)){if(1==t.selectionLimit)t.selectedOptions=[e];else{var s=t.unselectedOptions.indexOf(e);t.unselectedOptions.splice(s,1),t.selectedOptions.push(e)}if("number"==typeof t.selectionLimit){var i=t.selectedOptions.length;t.selectionLimit==i&&(t.open=!1,t.searchFilter="",t.updateOptions())}}},t.getId=function(l){return angular.isString(l)?l:angular.isObject(l)?t.idProp?e.getRecursiveProperty(l,t.idProp):(n.error("Multiselect: when using objects as model, a idProp value is mandatory."),""):l},t.getDisplay=function(l){return angular.isString(l)?l:angular.isObject(l)?t.displayProp?e.getRecursiveProperty(l,t.displayProp):(n.error("Multiselect: when using objects as model, a displayProp value is mandatory."),""):l},t.isSelected=function(e){if(!t.selectedOptions)return!1;for(var l=t.getId(e),n=0;n<t.selectedOptions.length;n++){var s=t.selectedOptions[n];if(t.getId(s)===l)return!0}return!1},t.updateOptions=function(){if("function"==typeof t.options&&t.options().then(function(e){t.resolvedOptions=e,a()}),t.fetchSearchFilterData&&"function"==typeof t.fetchSearchFilterData){var e={filterStr:t.searchFilter},l=t.unselectedOptions,n=0;for(var s in l)if(l[s].name.toLowerCase().indexOf(t.searchFilter.toLowerCase())>-1&&n++,n>0){e.isHaveSelectedData=!0;break}t.fetchSearchFilterData(e)}},t.search=function(){var e=0;return function(l){if(e>t.searchLimit)return!1;var n=t.getDisplay(l);if(n){var s=n.toLowerCase().indexOf(t.searchFilter.toLowerCase())>-1;return s&&e++,s}}}}}}])}(),angular.module("btorfs.multiselect.templates",["multiselect.html"]),angular.module("multiselect.html",[]).run(["$templateCache",function(e){e.put("multiselect.html",'<style>.bootstrap-multiselect-scrollable{ height: 25vw;max-height: 30vw;overflow-x: hidden;}</style>\n<div class="btn-group" style="width: 100%">\n    <button type="button" class="btn dropdown-toggle" ng-class="classesBtn" ng-click="toggleDropdown()" ng-disabled="disabled" style="white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis;">\n        {{getButtonText()}}&nbsp;<span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu dropdown-menu-form"\nng-class="{\'bootstrap-multiselect-scrollable\': options.length > 15}"\n        ng-style="{display: open ? \'block\' : \'none\'}" style="overflow-x: auto">\n\n        <li ng-show="showSelectAll">\n            <a ng-click="selectAll()" href="">\n                <span class="glyphicon glyphicon-ok"></span> {{labels.selectAll || \'Select All\'}}\n            </a>\n        </li>\n        <li ng-show="showUnselectAll">\n            <a ng-click="unselectAll()" href="">\n                <span class="glyphicon glyphicon-remove"></span> {{labels.unselectAll || \'Unselect All\'}}\n            </a>\n        </li>\n        <li ng-show="(showSelectAll || showUnselectAll)"\n            class="divider">\n        </li>\n\n        <li role="presentation" ng-repeat="option in selectedOptions" class="active">\n            <a class="item-selected" href="" title="{{showTooltip ? getDisplay(option) : \'\'}}" ng-click="toggleItem(option); $event.stopPropagation()" style="overflow-x: hidden;text-overflow: ellipsis">\n                <span class="glyphicon glyphicon-remove"></span>\n                {{getDisplay(option)}}\n            </a>\n        </li>\n        <li ng-show="selectedOptions.length > 0" class="divider"></li>\n\n        <li ng-show="showSearch">\n            <div class="dropdown-header">\n                <input type="text" class="form-control input-sm" style="width: 100%;"\n                       ng-model="searchFilter" placeholder="{{labels.search || \'Search...\'}}" ng-change="updateOptions()" focus-on="searchFilter">\n            </div>\n        </li>\n\n        <li ng-show="showSearch" class="divider"></li>\n        <li role="presentation" ng-repeat="option in unselectedOptions | filter:search() | limitTo: searchLimit"\n            ng-if="!isSelected(option)"\n            ng-class="{disabled : selectionLimit && selectionLimit != 1 && selectedOptions.length >= selectionLimit}">\n            <a class="item-unselected" href="" ng-class="{{option.customClass}}" title="{{showTooltip ? getDisplay(option) : \'\'}}" ng-click="toggleItem(option); $event.stopPropagation()" style="overflow-x: hidden;text-overflow: ellipsis">\n                {{getDisplay(option)}}\n            </a>\n        </li>\n\n        <li class="divider" ng-show="selectionLimit > 1"></li>\n        <li role="presentation" ng-show="selectionLimit > 1">\n            <a>{{selectedOptions.length || 0}} / {{selectionLimit}} {{labels.itemsSelected || \'selected\'}}</a>\n        </li>\n\n    </ul>\n</div>\n')}]);
